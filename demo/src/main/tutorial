PUT має на увазі розміщення ресурсу - повну заміну всього, що є у цій URL-адресою, іншим.
За визначенням PUT ідемпотентів. Зробіть це стільки разів, скільки захочете, і результат
буде той же. x = 5ідемпотентно. Ви можете ПОСТАВИТИ ресурс незалежно від того, існує він
раніше чи ні (наприклад, для створення або поновлення)!

POST оновлює ресурс, додає додатковий ресурс або викликає зміна. POST не є ідемпотентна,
як x ++ і не ідемпотентна способом.

Згідно з цим аргументу, PUT призначений для створення, коли ви знаєте URL-адресу того,
що ви створюєте. POST можна використовувати для створення, коли ви знаєте URL-адресу «фабрики»
або менеджера для категорії речей, які ви хочете створити.

так:

POST / expense-report
PUT / expense-report / 10929

==============================================================================
---------Простые выражения:
Выражения переменных:           ${...}
Выражения переменных выбора:    *{...}
Выражения сообщений:            #{...}
Выражения URL ссылки:           @{...}
Выражения фрагментов:           ~{...}
---------Литералы
Текстовые литералы:             'one text', 'Another one!', ...
Количество литералов:           0, 34, 3.0, 12.3, ...
Булевы литералы:                true,false
Нулевой литерал:                null
Лексемы:                        one, sometext, main, ...
---------Текстовые операции:
Конкатенация строк:             +
Буквальные замены:              |The name is ${name}|
---------Арифметические операции:
Бинарные операторы:             +, -, *, /,%
Знак минус (унарный оператор):  -
---------Логические операции:
Бинарные операторы:             and,or
Логическое отрицание (унарный оператор): !,not
---------Сравнения и равенство:
Компараторы:                    >, <, >=, <=( gt, lt, ge, le)
Операторы равенства:            ==, !=( eq, ne)
---------Условные операторы:
Если-то:                        (if) ? (then)
Если-то-еще:                    (if) ? (then) : (else)
По умолчанию:                   (value) ?: (defaultvalue)
---------Специальные жетоны:
Нет операции:                   _
==============================================================================

th: field встановлює name, id і value поля. Таким чином, вони кілька взаємозамінні, але ви повинні використовувати th: field коли це можливо, тому що він пропонує додаткову інтеграцію з пружиною і працює з усіма видами введення - але вони дійсно корисні тільки тоді, коли ви редагуєте один об'єкт на сторінці.